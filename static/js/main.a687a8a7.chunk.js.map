{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleClick","event","code","key","setState","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,IAAMF,EAA4B,UAAfE,EAAMC,KACrB,QACAD,EAAME,IAEV,EAAKC,SAAS,CAAEL,gBAlBpB,uDAKE,WACEM,SAASC,iBAAiB,QAASC,KAAKP,eAN5C,kCASE,WACEK,SAASG,oBAAoB,QAASD,KAAKP,eAV/C,oBAqBE,WACE,IAAQD,EAAeQ,KAAKT,MAApBC,WAER,OACE,mBAAGU,UAAU,eAAb,SACmB,KAAfV,EACE,0BADF,mCAE8BA,EAF9B,WA1BV,GAAyBW,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.a687a8a7.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleClick);\n  }\n\n  handleClick = (event: KeyboardEvent) => {\n    const pressedKey = event.code === 'Space'\n      ? 'Space'\n      : event.key;\n\n    this.setState({ pressedKey });\n  };\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <p className=\"App__message\">\n        { pressedKey === ''\n          ? 'Nothing was pressed yet'\n          : `The last pressed key is [${pressedKey}]`}\n      </p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}