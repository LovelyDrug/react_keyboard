{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","handleClick","event","setState","key","document","addEventListener","this","removeEventListener","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAyB,CACvBC,WAAY,IAFhB,EAaEC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEH,WAAYE,EAAME,OAdtC,uDAKE,WACEC,SAASC,iBAAiB,QAASC,KAAKN,eAN5C,kCASE,WACEI,SAASG,oBAAoB,QAASD,KAAKN,eAV/C,oBAiBE,WACE,OACE,mBAAGQ,UAAU,eAAb,SAC8B,KAA1BF,KAAKR,MAAMC,WACT,0BADF,mCAE8BO,KAAKR,MAAMC,WAFzC,WApBV,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAP,SAASQ,eAAe,W","file":"static/js/main.78632615.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', this.handleClick);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleClick);\n  }\n\n  handleClick = (event: KeyboardEvent) => {\n    this.setState({ pressedKey: event.key });\n  };\n\n  render() {\n    return (\n      <p className=\"App__message\">\n        { this.state.pressedKey === ''\n          ? 'Nothing was pressed yet'\n          : `The last pressed key is [${this.state.pressedKey}]`}\n      </p>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}